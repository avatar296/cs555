kafka {
  bootstrap.servers = "kafka:9092"
  bootstrap.servers = ${?KAFKA_BOOTSTRAP_SERVERS}
}

schema-registry {
  url = "http://schema-registry:8081"
  url = ${?SCHEMA_REGISTRY_URL}
}

iceberg {
  catalog.name = "lakehouse"
  catalog.type = "jdbc"
  catalog.type = ${?ICEBERG_CATALOG_TYPE}
  warehouse.path = "s3a://lakehouse/warehouse"
  warehouse.path = ${?ICEBERG_WAREHOUSE_PATH}

  jdbc.uri = "jdbc:postgresql://postgres-iceberg:5432/iceberg"
  jdbc.uri = ${?ICEBERG_JDBC_URI}
  jdbc.user = "iceberg"
  jdbc.user = ${?ICEBERG_JDBC_USER}
  jdbc.password = "iceberg123"
  jdbc.password = ${?ICEBERG_JDBC_PASSWORD}
}

s3 {
  endpoint = "http://minio:9000"
  endpoint = ${?S3_ENDPOINT}

  access.key = "admin"
  access.key = ${?S3_ACCESS_KEY}

  secret.key = "admin123"
  secret.key = ${?S3_SECRET_KEY}

  path.style.access = true
  ssl.enabled = false
}

checkpoint {
  base.path = "s3a://lakehouse/checkpoints"
  base.path = ${?CHECKPOINT_BASE_PATH}
}

bronze {
  trips {
    topic = "trips.yellow"
    table = "lakehouse.bronze.trips"
    checkpoint = ${checkpoint.base.path}"/bronze/trips"
  }

  weather {
    topic = "weather.updates"
    table = "lakehouse.bronze.weather"
    checkpoint = ${checkpoint.base.path}"/bronze/weather"
  }

  events {
    topic = "special.events"
    table = "lakehouse.bronze.events"
    checkpoint = ${checkpoint.base.path}"/bronze/events"
  }
}

silver {
  trips_cleaned {
    source = "lakehouse.bronze.trips"
    table = "lakehouse.silver.trips_cleaned"
    checkpoint = ${checkpoint.base.path}"/silver/trips_cleaned"

    quality {
      min_trip_distance = 0.1       # miles
      max_trip_distance = 200.0     # miles
      min_fare = 2.50               # USD
      max_fare = 1000.0             # USD
      min_passengers = 1
      max_passengers = 6
    }
  }

  weather_cleaned {
    source = "lakehouse.bronze.weather"
    table = "lakehouse.silver.weather_cleaned"
    checkpoint = ${checkpoint.base.path}"/silver/weather_cleaned"

    quality {
      min_temperature = -20.0      # Fahrenheit
      max_temperature = 120.0      # Fahrenheit
      max_precipitation = 10.0     # inches/hour
      max_wind_speed = 100.0       # mph
    }
  }

  events_cleaned {
    source = "lakehouse.bronze.events"
    table = "lakehouse.silver.events_cleaned"
    checkpoint = ${checkpoint.base.path}"/silver/events_cleaned"
    quality {
      min_attendance = 1
      max_attendance = 100000
      max_event_duration_hours = 24
    }
  }
}

gold {
  trip_metrics_live {
    source = "lakehouse.silver.trips_cleaned"
    table = "lakehouse.gold.trip_metrics_live"
    checkpoint = ${checkpoint.base.path}"/gold/trip_metrics_live"
  }

  pipeline_latency {
    source = "lakehouse.silver.trips_cleaned"
    table = "lakehouse.monitoring.pipeline_latency_metrics"
    checkpoint = ${checkpoint.base.path}"/monitoring/pipeline_latency"
  }
}

streaming {
  trigger.interval = "10 seconds"
  trigger.interval = ${?TRIGGER_INTERVAL}

  starting.offsets = "earliest"
  fail.on.data.loss = false
}
