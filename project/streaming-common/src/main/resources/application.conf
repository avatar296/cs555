# Spatial Temporal Analysis (STA) - Streaming Configuration
# Medallion Architecture Configuration

# Kafka Configuration
kafka {
  bootstrap.servers = "kafka:9092"
  bootstrap.servers = ${?KAFKA_BOOTSTRAP_SERVERS}
}

# Schema Registry Configuration
schema-registry {
  url = "http://schema-registry:8081"
  url = ${?SCHEMA_REGISTRY_URL}
}

# Iceberg Catalog Configuration
iceberg {
  catalog.name = "lakehouse"
  catalog.type = "hive"
  catalog.type = ${?ICEBERG_CATALOG_TYPE}
  warehouse.path = "s3a://lakehouse/warehouse"
  warehouse.path = ${?ICEBERG_WAREHOUSE_PATH}

  # Hive Metastore Configuration
  hive.metastore.uri = "thrift://hive-metastore:9083"
  hive.metastore.uri = ${?HIVE_METASTORE_URI}
}

# MinIO / S3 Configuration
s3 {
  endpoint = "http://minio:9000"
  endpoint = ${?S3_ENDPOINT}

  access.key = "admin"
  access.key = ${?S3_ACCESS_KEY}

  secret.key = "admin123"
  secret.key = ${?S3_SECRET_KEY}

  path.style.access = true
  ssl.enabled = false
}

# Checkpoint Configuration
checkpoint {
  base.path = "/tmp/checkpoint"
  base.path = ${?CHECKPOINT_BASE_PATH}
}

# Bronze Layer Topics
bronze {
  trips {
    topic = "trips.yellow"
    table = "lakehouse.bronze.trips"
    checkpoint = ${checkpoint.base.path}"/bronze/trips"
  }

  weather {
    topic = "weather.updates"
    table = "lakehouse.bronze.weather"
    checkpoint = ${checkpoint.base.path}"/bronze/weather"
  }

  events {
    topic = "special.events"
    table = "lakehouse.bronze.events"
    checkpoint = ${checkpoint.base.path}"/bronze/events"
  }
}

# Streaming Configuration
streaming {
  trigger.interval = "10 seconds"
  trigger.interval = ${?TRIGGER_INTERVAL}

  starting.offsets = "earliest"
  fail.on.data.loss = false
}
