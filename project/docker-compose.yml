
services:
  kafka:
    image: bitnami/kafka:3.7
    container_name: kafka
    environment:
      - KAFKA_CFG_NODE_ID=1
      - KAFKA_CFG_PROCESS_ROLES=broker,controller
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=1@kafka:9093
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,CONTROLLER://:9093
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
      - KAFKA_CFG_AUTO_CREATE_TOPICS_ENABLE=false
      - KAFKA_CFG_TRANSACTION_STATE_LOG_REPLICATION_FACTOR=1
      - KAFKA_CFG_TRANSACTION_STATE_LOG_MIN_ISR=1
      - KAFKA_CFG_OFFSETS_TOPIC_REPLICATION_FACTOR=1
      - ALLOW_PLAINTEXT_LISTENER=yes
    ports:
      - "9092:9092"
    volumes:
      - kafka-data:/bitnami/kafka
    healthcheck:
      test: ["CMD", "bash", "-lc", "kafka-topics.sh --bootstrap-server localhost:9092 --list >/dev/null 2>&1"]
      interval: 10s
      timeout: 5s
      retries: 10

  kafka-ui:
    image: provectuslabs/kafka-ui:latest
    container_name: kafka-ui
    depends_on:
      - kafka
    environment:
      - KAFKA_CLUSTERS_0_NAME=local
      - KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS=kafka:9092
    ports:
      - "8080:8080"

  # minio:
  #   image: minio/minio:latest
  #   container_name: minio
  #   command: server /data --console-address ":9001"
  #   environment:
  #     - MINIO_ROOT_USER=admin
  #     - MINIO_ROOT_PASSWORD=admin12345
  #   volumes:
  #     - minio-data:/data
  #   ports:
  #     - "9000:9000"   # S3 API endpoint
  #     - "9001:9001"   # MinIO console
  #   healthcheck:
  #     test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/ready"]
  #     interval: 10s
  #     timeout: 5s
  #     retries: 10

  # create-bucket:
  #   image: minio/mc:latest
  #   container_name: minio-setup
  #   depends_on:
  #     minio:
  #       condition: service_healthy
  #   entrypoint: >
  #     /bin/sh -c "
  #     mc alias set local http://minio:9000 admin admin12345 &&
  #     mc mb -p local/cityscale ||
  #     true
  #     "

  kafka-setup:
    image: confluentinc/cp-kafka:7.6.1
    container_name: kafka-setup
    depends_on:
      kafka:
        condition: service_healthy
    entrypoint: >
      bash -lc "
      kafka-topics --bootstrap-server kafka:9092
                   --create --if-not-exists
                   --topic trips.yellow
                   --partitions 12 --replication-factor 1
      "
volumes:
  kafka-data:
  minio-data:
